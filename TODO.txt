Documentation Links
	a. Neopixel lights library https://github.com/adafruit/Adafruit_CircuitPython_NeoPixel
	b. gpio zero - documentation https://gpiozero.readthedocs.io/en/stable/
		- Library https://github.com/gpiozero/gpiozero

2. Environment stuff
	- Figure out how to launch kivy in full screen.
	- Figure out how to run 2 kivy apps at the same time in full screen on two different
		screens at the same time.


Arena TODOS:
1. Lights:
	2. Lights for idle.
		A. Turning off lights for idle.
	3. Lights for waiting for players.
		- Door closed screen
		- Non-door closed screen
	5. Lights for player 1 & 2 ready.
		- I need to verify this when using more lights then 1.
	6. Lights for door drop.
		- I need to verify this when the match timer and the door drop timer overlap.
	8. Lights for team
		A. Team 1 Goal
		B. Team 2 Goal
	9. Lights for game paused.
	10. Lights for Player 1/2 wins deathmatch
	11. Lights for team 1/2 wins soccer
	12. Lights for soccer match tie
	13. Lights for game countdown.
		- Partially implemented.
		- All this needs is a variable.

	14. Ligths for game selection.
	15. Lights for configuring death match.
	16. Lights for configuring soccer.
	17. Lights for waiting for players to close doors.
	18. Lights for waiting for players to press ready.
	19. Lights for doors not closed when player presses ready.
	20. Doors - lights Make sure to change lights when if the door needs to be closed before
		   the match can begin and they are not closed.


21 . Rewrite all light related actions acdnd match timers interms of animations
		this will make it easier to cancel some actions. Speicifically the open/close door actions.
		- Consider handling this animation for death match also, this would be so we can
		Set it and forget it. for the door drop and other related actions.

*** Create a synchronous send receive for arduino communication that's handled outside of the event loop.
		- Or possibly inside of the event loop, but non-blocking?