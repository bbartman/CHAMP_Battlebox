#:import BBDeathMatchProp BattleBox.data.BBDeathMatchProp
#:import BBRunDeathMatchProp BattleBox.data.BBRunDeathMatchProp

<ScreenManagement>:
    MainScreen:
    DeathmatchScreen:
    RunDeathmatchScreen:
    SoccerScreen:
    RunSoccerScreen:
    DMDecisionScreen:
    PlayersReadyScreen:
    VictoryScreen:
    ManualSoccerScoreAdjustmentScreen:
    CountDownScreen:

<MainScreen>:
    name: 'main'
    data: app.data
    GridLayout:
        rows:2
        Label:
            text: 'Select your battle box game mode:'
            font_size: 40

        BoxLayout:
            Button:
                text: 'Deathmatch'
                font_size: 24
                on_release:
                    app.data.death_match.reset()
                    app.root.current = 'deathmatch'
                    root.manager.transition.direction = 'left'

            Button:
                text: 'Soccer'
                font_size: 24
                on_release:
                    app.data.soccer_match.reset()
                    app.root.current = 'soccer'
                    root.manager.transition.direction = 'left'

<CustomDropDown>:
    Button: 
        text: 'Drop Both'
        size_hint_y: None
        height: 80
        on_release:
            root.select('Drop Both')
    Button: 
        text: 'Doors Always Open'
        size_hint_y: None
        height: 80
        on_release:
            root.select('Doors Always Open')

    Button: 
        text: 'Drop Red Player Door Only'
        size_hint_y: None
        height: 80
        on_release:
            root.select('Drop Red Player Door Only')
    Button: 
        text: 'Drop Blue Player Door Only'
        size_hint_y: None
        height: 80
        on_release:
            root.select('Drop Blue Player Door Only')
    Button:
        text: 'Drop Random Door'
        size_hint_y: None
        height: 80
        on_release:
            root.select('Drop Random Door')


<DeathmatchScreen>:
    name: 'deathmatch'
    id: dms
    on_pre_enter:
        self.ids.dm_door_drop.do_update_main_button(app.data.death_match.door_drop)
    ScrollView:
        size_hint_y: 1
        do_scroll_x: False
        do_scroll_y: True
        StackLayout:
            size_hint: [1, 1.66]
            Label:
                text: 'Configure deathmatch:'
                font_size: 40
                size_hint: [1, .07]

            GridLayout:
                size_hint: [1, .055]
                cols:2
                Label:
                    size_hint: [1, .055]
                    text: "Match Duration (Seconds):"
                    font_size: 30
                    halign: "left"
                TextInput:
                    id: dm_duration
                    size_hint: [1, .055]
                    input_filter: "int"
                    multiline: False
                    text: app.data.death_match.duration
                    on_text: app.data.death_match.duration = args[1]
                    font_size: 30
                    halign: "left"

            DropdownDemo:
                id: dm_door_drop
                size_hint: [1, .055]
                padding: 0
                spacing: 0
                cols: 2
                on_select:
                    dms.drop_down_changed(args[0], args[1])
                    app.data.death_match.door_drop = args[1]

            GridLayout:
                size_hint: [1, .055]
                cols:2

                Label:
                    size_hint: [1, .055]
                    text: "Door drop timer:"
                    font_size: 30
                    halign: "left"

                TextInput:
                    id: dm_door_drop_duration
                    size_hint: [1, .055]
                    input_filter: "int"
                    multiline: False
                    text: app.data.death_match.door_drop_duration
                    on_text: app.data.death_match.door_drop_duration = args[1]
                    font_size: 30
                    halign: "left"

            GridLayout:
                size_hint: [1, .055]
                cols:2
                Label:
                    text: "Player One Name"
                    font_size: 30
                    halign: "left"
                    size_hint: [1, .055]
                TextInput:
                    id: dm_player_one_name
                    multiline: False
                    text: app.data.death_match.player_one_name
                    on_text: app.data.death_match.player_one_name = args[1]
                    font_size: 30
                    halign: "left"
                    size_hint: [1, .055]
            GridLayout:
                size_hint: [1, .055]
                cols:2
                Label:
                    size_hint: [1, .055]
                    text: "Player Two Name"
                    font_size: 30
                    halign: "left"
                TextInput:
                    id: dm_player_two_name
                    size_hint: [1, .055]
                    multiline: False
                    text: app.data.death_match.player_two_name
                    on_text: app.data.death_match.player_two_name = args[1]
                    font_size: 30
                    halign: "left"
            GridLayout:
                size_hint: [1, .22]
                cols:2
                Button:
                    text: 'Back'
                    size_hint: [1, .22]
                    on_release:
                        app.root.current = 'main'
                        root.manager.transition.direction = 'right'
                        dms.reset_screen(app)
                    font_size: 30
                Button:
                    text: 'Battle'
                    size_hint: [1, .22]
                    on_release:
                        temp = app.root.get_screen('WaitForPlayers')
                        temp.reset_screen("RunDeathmatch", "Player", dms.name, "FIGHT!!!")
                        app.root.current = 'WaitForPlayers'
                        root.manager.transition.direction = 'left'

                    font_size: 30
                Button:
                    text: 'Reset'
                    size_hint: [1, .22]
                    on_release:
                        dms.reset_screen(app)
                    font_size: 30



<SoccerScreen>:
    name: 'soccer'
    id:sms
    ScrollView:
        size_hint_y: 1
        do_scroll_x: False
        do_scroll_y: True
        StackLayout:
            size_hint: [1, 1.66]
            Label:
                text: 'Configure Soccer Match:'
                font_size: 40
                size_hint: [1, .07]
            GridLayout:
                size_hint: [1, .165]
                cols:2
                Label:
                    size_hint: [1, .055]
                    text: "Match Duration (Seconds):"
                    font_size: 30
                    halign: "left"
                TextInput:
                    size_hint: [1, .055]
                    input_filter: "int"
                    multiline: False
                    text: app.data.soccer_match.duration
                    on_text: app.data.soccer_match.duration = args[1]
                    font_size: 30
                    halign: "left"
                Label:
                    size_hint: [1, .055]
                    text: "Points:"
                    font_size: 30
                    halign: "left"
                TextInput:
                    size_hint: [1, .055]
                    input_filter: "int"
                    multiline: False
                    text: app.data.soccer_match.points
                    on_text: app.data.soccer_match.points = args[1]
                    font_size: 30
                    halign: "left"
                Label:
                    text: "Team One Name"
                    font_size: 30
                    halign: "left"
                    size_hint: [1, .055]
                TextInput:
                    text: app.data.soccer_match.team_one_name
                    on_text: app.data.soccer_match.team_one_name = args[1]
                    font_size: 30
                    multiline: False
                    halign: "left"
                    multiline: False
                    size_hint: [1, .055]
            GridLayout:
                size_hint: [1, .055]
                cols:2
                Label:
                    size_hint: [1, .055]
                    text: "Team Two Name"
                    font_size: 30
                    halign: "left"
                TextInput:
                    size_hint: [1, .055]
                    multiline: False
                    text: app.data.soccer_match.team_two_name
                    on_text: app.data.soccer_match.team_two_name = args[1]
                    font_size: 30
                    halign: "left"
            GridLayout:
                size_hint: [1, .22]
                cols:2
                Button:
                    text: 'Back'
                    size_hint: [1, .22]
                    on_release:
                        app.root.current = 'main'
                        root.manager.transition.direction = 'right'
                        sms.reset_screen(app)
                    font_size: 30
                Button:
                    text: 'Start Game'
                    size_hint: [1, .22]
                    on_release:
                        app.data.run_soccer_match.team_one_score = 0
                        app.data.run_soccer_match.team_two_score = 0
                        temp = app.root.get_screen('WaitForPlayers')
                        temp.reset_screen("RunSoccer", "Team", sms.name, "GO!!!")
                        app.root.current = 'WaitForPlayers'
                        root.manager.transition.direction = 'left'
                    font_size: 30
                Button:
                    text: 'Reset'
                    size_hint: [1, .22]
                    on_release:
                        sms.reset_screen(app)
                    font_size: 30

<RunSoccerScreen>
    name: "RunSoccer"
    id:rss
    data: app.data.run_soccer_match
    smData:app.data.soccer_match
    on_max_score_reached:
        temp = app.root.get_screen('VictoryScreen')
        temp.reset_screen(rss.get_winning_team_name() + " \nhas won!!!", "main")
        app.root.current = 'VictoryScreen'
        root.manager.transition.direction = 'left'
    on_pre_enter:
        countDownClock.start(rss.smData.duration)
        subScrn.current = 'mainRunSoccerScreen'
        rss.pause_play_button_text = "Pause\nGame"
    StackLayout:
        size_hint: [1, 1]
        GridLayout:
            size_hint: [1, .3]
            cols:3
            Label:    
                text: "Soccer Match"
                font_size: 30
            Label:
                text: ""
            CountDownClockLabel:
                id: countDownClock
                font_size:30
                #on_timer_idle:
                #    print("Called on timer idle")
                on_pause:
                    rss.pause_play_button_text = "Resume\nGame"
                on_resume:
                    rss.pause_play_button_text = "Pause\nGame"
                #on_start:
                #   print("Called on start")
                #on_cancelled:
                #    print("Called on cancelled")
                on_time_expired:
                    temp = app.root.get_screen('VictoryScreen')
                    temp.reset_screen(rss.get_winning_team_name() + " \nhas won!!!", "main")
                    app.root.current = 'VictoryScreen'
                    root.manager.transition.direction = 'left'
            Label:
                text: rss.smData.get_team_one_name()
                font_size:30
            Label:
                text: "-"
                font_size:100
            Label:
                text: rss.smData.get_team_two_name()
                font_size:30
            Label:
                text: str(rss.data.team_one_score)
                font_size:50
            Label:
                text: "-"
                font_size:100
            Label:
                text: str(rss.data.team_two_score)
                font_size:50
        RunSoccerSubScreenSelector:
            size_hint:[1, .7]
            id:subScrn
            Screen:
                name: "mainRunSoccerScreen"

                GridLayout:
                    rows:2
                    Button:
                        text: 'Team 1\nScored'
                        font_size: 30
                        on_release:
                            rss.data.team_one_score += 1

                    Button:
                        text: 'Team 1\nWins'
                        font_size: 30
                        on_release:
                            temp = app.root.get_screen('VictoryScreen')
                            temp.reset_screen(rss.smData.get_team_one_name() + " \nhas won!!!", "main")
                            app.root.current = 'VictoryScreen'
                            root.manager.transition.direction = 'left'

                    Button:
                        text: 'Manually\nAdjust\nScore'
                        font_size: 30
                        on_release:
                            subScrn.current = 'AdjustScoreScreen'
                            subScrn.transition.direction = 'down'

                    Label:
                        text:""
                    Button:
                        text: 'Team 2\nScored'
                        font_size: 30
                        on_release:
                            rss.data.team_two_score += 1
        
                    Button:
                        text: 'Team 2\nWins' 
                        font_size: 30
                        on_release:
                            temp = app.root.get_screen('VictoryScreen')
                            temp.reset_screen(rss.smData.get_team_two_name() + " \nhas won!!!", "main")
                            app.root.current = 'VictoryScreen'
                            root.manager.transition.direction = 'left'

                    Button:
                        id:pausePlayButton
                        text: rss.pause_play_button_text
                        font_size: 30
                        on_release:
                            rss.play_pause_pressed()


                    Button:
                        text: 'Scrub Match'
                        on_release:
                            app.root.current = 'main'
                            root.manager.transition.direction = 'left'
                            app.data.soccer_match.reset()
                            countDownClock.cancel()
                        font_size: 30
            ManualSoccerScoreAdjustmentScreen:
                name:'AdjustScoreScreen'
                data:app.data.run_soccer_match
                smData:app.data.soccer_match
                id:mssas
                GridLayout:
                    cols:3
                    GridLayout:
                        cols:2
                        Button:
                            text: '+'
                            font_size:30
                            on_release:
                                mssas.data.team_one_score += 1
                        Button:
                            text: '-'
                            font_size:30
                            on_release:
                                mssas.data.team_one_score -= 1
                    Button:
                        size_hint:[1, .2]
                        text: "Done"
                        font_size:30
                        on_release:
                            subScrn.current = 'mainRunSoccerScreen'
                            subScrn.transition.direction = 'up'

                    GridLayout:
                        size_hint:[1, .2]
                        cols:2
                        Button:
                            text: '+'
                            font_size:30
                            on_release:
                                mssas.data.team_two_score += 1
                        Button:
                            text: '-'
                            font_size:30
                            on_release:
                                mssas.data.team_two_score -= 1




<RunDeathmatchScreen>
    name: 'RunDeathmatch'
    data: app.data.run_death_match
    dmData: app.data.death_match
    id: rdms

    on_player_one_wins:
        countDownClock.cancel()
        temp = app.root.get_screen('VictoryScreen')
        temp.reset_screen(rdms.dmData.get_player_one_name() + " \nhas won!!!", "main")
        app.root.current = 'VictoryScreen'
        root.manager.transition.direction = 'left'

    on_player_two_wins:
        countDownClock.cancel()
        temp = app.root.get_screen('VictoryScreen')
        temp.reset_screen(rdms.dmData.get_player_two_name() + " \nhas won!!!", "main")
        app.root.current = 'VictoryScreen'
        root.manager.transition.direction = 'left'

    StackLayout:
        GridLayout:
            cols: 3
            size_hint: [1, .1]
            Label:
                text: "Deathmatch"
                font_size: 30
            CountDownClockLabel:
                id:countDownClock
                font_size:30
        GridLayout:
            size_hint: [1, .8]
            cols:2
            Button:
                text: 'Player 1 Won'
                font_size: 30
                on_release:
                    rdms.data.state = BBRunDeathMatchProp.STATE_player_one_wins
            Button:
                text: 'Player 2 Won'
                font_size: 30
                on_release:
                    rdms.data.state = BBRunDeathMatchProp.STATE_player_two_wins



        Button:
            size_hint: [1, .1]
            text: 'Scrub Match'
            on_release:
                app.root.current = 'main'
                root.manager.transition.direction = 'left'
                app.data.death_match.reset()
            font_size: 30

<DMDecisionScreen>
    name: 'DeathMatchDecision'
    dmData: app.data.death_match
    id:dmds
    StackLayout:
        size_hint:[1, 1]
        Label:
            size_hint:[1, .7]
            font_size:60
            text: "And the winner is?"
        GridLayout:
            cols:2

            Button:
                text: 'Player 1 Won'
                font_size: 30
                on_release:
                    temp = app.root.get_screen('VictoryScreen')
                    temp.reset_screen(dmds.dmData.get_player_one_name() + " \nhas won!!!", "main")
                    app.root.current = 'VictoryScreen'
                    root.manager.transition.direction = 'left'

            Button:
                text: 'Player 2 Won'
                font_size: 30
                on_release:
                    temp = app.root.get_screen('VictoryScreen')
                    temp.reset_screen(dmds.dmData.get_player_two_name() + " \nhas won!!!", "main")
                    app.root.current = 'VictoryScreen'
                    root.manager.transition.direction = 'left'

<PlayersReadyScreen>
    name: 'WaitForPlayers'
    id:wfp
    on_everyone_ready:
        temp = app.root.get_screen('CountDownScreen')
        temp.reset_screen(self.next_screen_after_ready, wfp.previous_screen, wfp.count_down_word)
        app.root.current = temp.name
        root.manager.transition.direction = 'left'
    on_leave:
        p1_rdy_btn.disabled = False
        p2_rdy_btn.disabled = False
    StackLayout:
        Label:
            size_hint: [1, .1]
            text: "Waiting for players"
            font_size: 30
        GridLayout:
            size_hint: [1, .8]
            cols:2
            Button:
                text: wfp.player_or_team + ' 1 \nReady'
                font_size: 30
                id:p1_rdy_btn
                on_release:
                    wfp.players_ready += 1
                    self.disabled = True
            Button:
                text: wfp.player_or_team + ' 2 \nReady'
                font_size: 30
                id:p2_rdy_btn
                on_release:
                    wfp.players_ready += 1
                    self.disabled = True
        Button:
            text: 'Reconfigure'
            size_hint:[1, .1]
            on_release:
                app.root.current = wfp.previous_screen
                root.manager.transition.direction = 'right'
            font_size: 30

<VictoryScreen>
    name:'VictoryScreen'
    id: vs
    StackLayout:
        Label:
            size_hint:[1, .7]
            text:vs.victor_text 
            font_size:100
        Button:
            text: 'continue'
            size_hint:[1, .3]
            font_size:30
            on_release:
                app.root.current = vs.next_screen
                root.manager.transition.direction = 'left'

<CountDownScreen>
    name: "CountDownScreen"
    id: cds
    on_pre_enter:
        ft.start()
    StackLayout:
        size_hint: [1, 1]
        FadeTicker:
            id:ft
            size_hint: [1, .8]
            font_size:150
            final_word: cds.final_word
            on_ready:
                app.root.current = cds.next
                root.manager.transition.direction = 'left'
        Button:
            size_hint: [1, .2]
            text: "Cancel"
            on_press:
                ft.cancel()
                app.root.current = cds.previous
                root.manager.transition.direction = 'right'
